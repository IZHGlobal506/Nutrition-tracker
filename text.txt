<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dinner & Calorie Calculator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            line-height: 1.6;
            background: #f9f9f9;
            color: #333;
        }
        header {
            background: #4CAF50;
            color: #fff;
            padding: 1rem;
            text-align: center;
        }
        section {
            max-width: 900px;
            margin: auto;
            background: #fff;
            padding: 2rem;
            margin-top: 1rem;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
        }
        th, td {
            padding: 0.5rem;
            border: 1px solid #ddd;
            text-align: left;
        }
        th {
            background: #f2f2f2;
        }
        input {
            width: 90%;
            padding: 4px;
            box-sizing: border-box;
        }
        .btn {
            margin-top: 1rem;
            padding: 0.5rem 1rem;
            background: #4CAF50;
            color: #fff;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }
        .btn:hover {
            background: #45a049;
        }
        footer {
            background: #333;
            color: #fff;
            text-align: center;
            padding: 1rem;
            margin-top: 2rem;
        }
        canvas {
            margin-top: 1rem;
            max-width: 400px;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }
    </style>
</head>
<body>

    <header>
        <h1>Dinner Calorie Calculator</h1>
        <p>Track your meals, see nutrition totals, and visualize macros</p>
    </header>

    <section>
        <h2>Meal Entry</h2>
        <table id="mealTable">
            <thead>
                <tr>
                    <th>Item</th>
                    <th>Calories</th>
                    <th>Protein (g)</th>
                    <th>Carbs (g)</th>
                    <th>Fat (g)</th>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <th>Total</th>
                    <th id="totalCalories">0</th>
                    <th id="totalProtein">0</th>
                    <th id="totalCarbs">0</th>
                    <th id="totalFat">0</th>
                </tr>
            </tfoot>
        </table>
        <button class="btn" onclick="addRow()">+ Add Food Item</button>
        <button class="btn" style="background:#e74c3c" onclick="clearAll()">Clear All</button>

        <h2>Macro Breakdown</h2>
        <canvas id="macroChart"></canvas>
    </section>

    <footer>
        <p>Â© 2025 Dinner Planner</p>
    </footer>

    <!-- Chart.js from CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        let chart;

        function addRow(item = "", calories = "", protein = "", carbs = "", fat = "") {
            const tableBody = document.querySelector("#mealTable tbody");
            const newRow = document.createElement("tr");
            newRow.innerHTML = `
                <td><input type="text" value="${item}" placeholder="Food name"></td>
                <td><input type="number" min="0" step="1" value="${calories}"></td>
                <td><input type="number" min="0" step="0.1" value="${protein}"></td>
                <td><input type="number" min="0" step="0.1" value="${carbs}"></td>
                <td><input type="number" min="0" step="0.1" value="${fat}"></td>
            `;
            tableBody.appendChild(newRow);
            attachEvents();
        }

        function calculateTotals() {
            let totalCalories = 0, totalProtein = 0, totalCarbs = 0, totalFat = 0;
            const rows = document.querySelectorAll("#mealTable tbody tr");
            const data = [];

            rows.forEach(row => {
                const inputs = row.querySelectorAll("input");
                const item = inputs[0].value;
                const calories = parseFloat(inputs[1].value) || 0;
                const protein = parseFloat(inputs[2].value) || 0;
                const carbs = parseFloat(inputs[3].value) || 0;
                const fat = parseFloat(inputs[4].value) || 0;

                totalCalories += calories;
                totalProtein += protein;
                totalCarbs += carbs;
                totalFat += fat;

                data.push({ item, calories, protein, carbs, fat });
            });

            document.getElementById("totalCalories").textContent = totalCalories;
            document.getElementById("totalProtein").textContent = totalProtein.toFixed(1);
            document.getElementById("totalCarbs").textContent = totalCarbs.toFixed(1);
            document.getElementById("totalFat").textContent = totalFat.toFixed(1);

            localStorage.setItem("mealData", JSON.stringify(data));

            updateChart(totalProtein, totalCarbs, totalFat);
        }

        function updateChart(protein, carbs, fat) {
            const ctx = document.getElementById('macroChart').getContext('2d');

            if (chart) {
                chart.destroy();
            }

            chart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Protein (g)', 'Carbs (g)', 'Fat (g)'],
                    datasets: [{
                        data: [protein, carbs, fat],
                        backgroundColor: ['#36A2EB', '#FFCE56', '#FF6384']
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        }

        function attachEvents() {
            document.querySelectorAll("#mealTable input").forEach(input => {
                input.removeEventListener("input", calculateTotals);
                input.addEventListener("input", calculateTotals);
            });
        }

        function loadData() {
            const savedData = JSON.parse(localStorage.getItem("mealData") || "[]");
            if (savedData.length > 0) {
                savedData.forEach(row => {
                    addRow(row.item, row.calories, row.protein, row.carbs, row.fat);
                });
            } else {
                addRow();
            }
            calculateTotals();
        }

        function clearAll() {
            localStorage.removeItem("mealData");
            document.querySelector("#mealTable tbody").innerHTML = "";
            addRow();
            calculateTotals();
        }

        loadData();
    </script>

</body>
</html>
